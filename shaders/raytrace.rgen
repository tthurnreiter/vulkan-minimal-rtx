#version 460

#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_debug_printf : require

#include "../src/common.h"

struct PassableInfo
{
  vec3 color;         // The reflectivity of the surface.
  vec3 rayOrigin;     // The new ray origin in world-space.
  vec3 rayDirection;  // The new ray direction in world-space.
  uint rngState;      // State of the random number generator.
  bool rayHitSky;     // True if the ray hit the sky.
};

layout(binding = BINDING_IMAGE, set = 0, rgba32f) uniform image2D storageImage;
layout(binding = BINDING_TLAS, set = 0) uniform accelerationStructureEXT tlas;

layout(location = 0) rayPayloadEXT PassableInfo pld;

void main()
{
  const ivec2 resolution = imageSize(storageImage);
  const ivec2 pixel = ivec2(gl_LaunchIDEXT.xy);

  if(pixel.x >= resolution.x || pixel.y >= resolution.y){
    debugPrintfEXT("Early exit! pixel.xy: %d|%d, resolution.xy: %d|%d\n", pixel.x, pixel.y, resolution.x, resolution.y);
    return;
  }

  vec4 color = vec4(1.0,
                    0.0, 
                    0.0,
                    0.0);
  imageStore(storageImage, pixel, color);
}